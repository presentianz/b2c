{% extends 'Admin/admin_layout.html.twig' %}

{% block stylesheets %}
<!-- CSS to style the file input field as button and adjust the Bootstrap progress bars -->
<link rel="stylesheet" href="/js/jQuery-File-Upload/css/jquery.fileupload.css">
<link rel="stylesheet" href="/css/manage_by_excel.html.twig.css">
<link rel="stylesheet" href="/js/datatables/datatables.css">
{% endblock %}


{% block javacript_in_head_section %}
<script src="{{ asset('/js/xlsx.js') }}"></script>
{% endblock %}

{% block adminProduct %}
<li class="active">
	<a href="#" class="auto">
		<span class="pull-right text-muted">
		  <i class="i i-circle-sm-o text"></i>
		  <i class="i i-circle-sm text-active"></i>
		</span>
		<i class="i i-t-shirt icon"></i>
		<span class="font-bold">商品管理</span>
	</a>
	<ul class="nav dk">
		<li>
			<a href="{{ path('admin_product') }}" class="auto">
				<i class="i i-dot"></i><span>商品列表</span>
			</a>
		</li>
		<li>
			<a href="{{ path('admin_product_new') }}" class="auto">
				<i class="i i-dot"></i><span>添加商品</span>
			</a>
		</li>
		<li class="active">
			<a href="{{ path('admin_product_manage_by_excel') }}" class="auto">
				<span class="pull-right text-muted">
					<i class="i i-circle-sm-o text"></i>
					<i class="i i-circle-sm text-active"></i>
				</span>
				<i class="i i-dot"></i><span>批量管理</span>
			</a>
		</li>
	</ul>
</li>
{% endblock %}


{% block body %}
<section id="content">
    <section class="vbox">
        <section class="scrollable padder"> 
            <div class="container">
                <div class="panel panel-default">
                	<div id="drop">拖拽批量管理Excel文件 (.xlsx或者.xls) 至本区域.</div>
                    <!-- <div class="panel-heading">
                        <h3 class="panel-title">Notes</h3>
                    </div>
                    <div class="panel-body">
                        <ul>
                            <li>The maximum file size for uploads in this demo is <strong>999 KB</strong>.</li>
                            <li>Only excel files (<strong>.xls</strong> and <strong>.xlsx</strong>, and <strong>.csv</strong>) are allowed.</li>
                            <li>Uploaded files will be deleted automatically after <strong>5 minutes or less</strong></li>
                        </ul>
                    </div> -->
                </div>
                <div>
                <!-- The fileinput-button span is used to style the file input field as button -->
                <span class="btn btn-success fileinput-button">
                    <i class="glyphicon glyphicon-plus"></i>
                    <span>选择批量管理Excel文件...</span>
                    <!-- The file input field used as target for the file upload widget -->
                    <input id="fileupload" type="file" name="files[]" multiple>
                </span>
                <br>
                    <!-- The global progress bar -->
                    <div id="progress" class="progress">
                        <div class="progress-bar progress-bar-success"></div>
                    </div>

                    <!-- The Anslysis progress bar -->
                    <div id="analysis_progress" class="progress">
                        <div class="progress-bar progress-bar-success"></div>
                    </div>
                    <!-- The container for the uploaded files -->
                    <div id="files" class="files"></div>
                </div>
            </div>
            <section class="panel panel-default">
                <div class="table-responsive">
                    <div class="dataTables_wrapper" role="grid">
                        <table class="table table-striped m-b-none dataTable">
                                <thead>
                                <tr role="row">
                                    {% if not app.request.get('sort') or app.request.get('sort') == 7 %}
                                        <th class="sorting_asc"><a
                                                    href="{{ path('admin_product_manage_by_excel',{sort:8, item_no:app.request.get('item_no'),page:app.request.get('page'),keys:app.request.get('keys')}) }}">ID</a>
                                        </th>
                                    {% elseif app.request.get('sort') == 8 %}
                                        <th class="sorting_desc"><a
                                                    href="{{ path('admin_product_manage_by_excel',{sort:7, item_no:app.request.get('item_no'),page:app.request.get('page'),keys:app.request.get('keys')}) }}">ID</a>
                                        </th>
                                    {% else %}
                                        <th class="sorting"><a
                                                    href="{{ path('admin_product_manage_by_excel',{sort:7, item_no:app.request.get('item_no'),page:app.request.get('page'),keys:app.request.get('keys')}) }}">ID</a>
                                        </th>
                                    {% endif %}
                                    {% if app.request.get('sort') == 9 %}
                                        <th class="sorting_asc"><a
                                                    href="{{ path('admin_product_manage_by_excel',{sort:10, item_no:app.request.get('item_no'),page:app.request.get('page'),keys:app.request.get('keys')}) }}">名称</a>
                                        </th>
                                    {% elseif app.request.get('sort') == 10 %}
                                        <th class="sorting_desc"><a
                                                    href="{{ path('admin_product_manage_by_excel',{sort:9, item_no:app.request.get('item_no'),page:app.request.get('page'),keys:app.request.get('keys')}) }}">名称</a>
                                        </th>
                                    {% else %}
                                        <th class="sorting"><a
                                                    href="{{ path('admin_product_manage_by_excel',{sort:9, item_no:app.request.get('item_no'),page:app.request.get('page'),keys:app.request.get('keys')}) }}">名称</a>
                                        </th>
                                    {% endif %}
                                    {% if app.request.get('sort') == 2 %}
                                        <th class="sorting_asc"><a
                                                    href="{{ path('admin_product_manage_by_excel',{sort:3, item_no:app.request.get('item_no'),page:app.request.get('page'),keys:app.request.get('keys')}) }}">原价</a>
                                        </th>
                                    {% elseif app.request.get('sort') == 3 %}
                                        <th class="sorting_desc"><a
                                                    href="{{ path('admin_product_manage_by_excel',{sort:2, item_no:app.request.get('item_no'),page:app.request.get('page'),keys:app.request.get('keys')}) }}">原价</a>
                                        </th>
                                    {% else %}
                                        <th class="sorting"><a
                                                    href="{{ path('admin_product_manage_by_excel',{sort:2, item_no:app.request.get('item_no'),page:app.request.get('page'),keys:app.request.get('keys')}) }}">原价</a>
                                        </th>
                                    {% endif %}
                                    {% if app.request.get('sort') == 11 %}
                                        <th class="sorting_asc"><a
                                                    href="{{ path('admin_product_manage_by_excel',{sort:12, item_no:app.request.get('item_no'),page:app.request.get('page'),keys:app.request.get('keys')}) }}">折后价格</a>
                                        </th>
                                    {% elseif app.request.get('sort') == 12 %}
                                        <th class="sorting_desc"><a
                                                    href="{{ path('admin_product_manage_by_excel',{sort:11, item_no:app.request.get('item_no'),page:app.request.get('page'),keys:app.request.get('keys')}) }}">折后价格</a>
                                        </th>
                                    {% else %}
                                        <th class="sorting"><a
                                                    href="{{ path('admin_product_manage_by_excel',{sort:11, item_no:app.request.get('item_no'),page:app.request.get('page'),keys:app.request.get('keys')}) }}">折后价格</a>
                                        </th>
                                    {% endif %}
                                    {% if app.request.get('sort') == 13 %}
                                        <th class="sorting_asc"><a
                                                    href="{{ path('admin_product_manage_by_excel',{sort:6, item_no:app.request.get('item_no'),page:app.request.get('page'),keys:app.request.get('keys')}) }}">浏览次数</a>
                                        </th>
                                    {% elseif app.request.get('sort') == 6 %}
                                        <th class="sorting_desc"><a
                                                    href="{{ path('admin_product_manage_by_excel',{sort:13, item_no:app.request.get('item_no'),page:app.request.get('page'),keys:app.request.get('keys')}) }}">浏览次数</a>
                                        </th>
                                    {% else %}
                                        <th class="sorting"><a
                                                    href="{{ path('admin_product_manage_by_excel',{sort:13, item_no:app.request.get('item_no'),page:app.request.get('page'),keys:app.request.get('keys')}) }}">浏览次数</a>
                                        </th>
                                    {% endif %}
                                    {% if app.request.get('sort') == 15 %}
                                        <th class="sorting_asc"><a
                                                    href="{{ path('admin_product_manage_by_excel',{sort:16, item_no:app.request.get('item_no'),page:app.request.get('page'),keys:app.request.get('keys')}) }}">库存</a>
                                        </th>
                                    {% elseif app.request.get('sort') == 16 %}
                                        <th class="sorting_desc"><a
                                                    href="{{ path('admin_product_manage_by_excel',{sort:15, item_no:app.request.get('item_no'),page:app.request.get('page'),keys:app.request.get('keys')}) }}">库存</a>
                                        </th>
                                    {% else %}
                                        <th class="sorting"><a
                                                    href="{{ path('admin_product_manage_by_excel',{sort:15, item_no:app.request.get('item_no'),page:app.request.get('page'),keys:app.request.get('keys')}) }}">库存</a>
                                        </th>
                                    {% endif %}
                                    {% if app.request.get('sort') == 14 %}
                                        <th class="sorting_asc"><a
                                                    href="{{ path('admin_product_manage_by_excel',{sort:4, item_no:app.request.get('item_no'),page:app.request.get('page'),keys:app.request.get('keys')}) }}">销售</a>
                                        </th>
                                    {% elseif app.request.get('sort') == 4 %}
                                        <th class="sorting_desc"><a
                                                    href="{{ path('admin_product_manage_by_excel',{sort:14, item_no:app.request.get('item_no'),page:app.request.get('page'),keys:app.request.get('keys')}) }}">销售</a>
                                        </th>
                                    {% else %}
                                        <th class="sorting"><a
                                                    href="{{ path('admin_product_manage_by_excel',{sort:14, item_no:app.request.get('item_no'),page:app.request.get('page'),keys:app.request.get('keys')}) }}">销售</a>
                                        </th>
                                    {% endif %}
                                    {% if app.request.get('sort') == 17 %}
                                        <th class="sorting_asc"><a
                                                    href="{{ path('admin_product_manage_by_excel',{sort:18, item_no:app.request.get('item_no'),page:app.request.get('page'),keys:app.request.get('keys')}) }}">权重</a>
                                        </th>
                                    {% elseif app.request.get('sort') == 18 %}
                                        <th class="sorting_desc"><a
                                                    href="{{ path('admin_product_manage_by_excel',{sort:17, item_no:app.request.get('item_no'),page:app.request.get('page'),keys:app.request.get('keys')}) }}">权重</a>
                                        </th>
                                    {% else %}
                                        <th class="sorting"><a
                                                    href="{{ path('admin_product_manage_by_excel',{sort:17, item_no:app.request.get('item_no'),page:app.request.get('page'),keys:app.request.get('keys')}) }}">权重</a>
                                        </th>
                                    {% endif %}
                                    <th>状态</th>
                                </tr>
                                </thead>
                                <tbody role="alert" aria-live="polite" aria-relevant="all">
                                    {% for entity in data.products %}
                                    <tr id="{{entity.id}}">
                                        <td id="{{entity.id}}_entity_id">
                                            <a href="{{ path('admin_product_show', { 'id': entity.id }) }}">{{ entity.id }}</a>
                                        </td>
                                        <td id="{{entity.id}}_entity_name">
                                            {% if entity.name|length > 30 %}
                                                <span title="{{ entity.name }}">{{ entity.name|slice(0, 30) }}...</span>
                                            {% else %}
                                                <span title="{{ entity.name }}">{{ entity.name }}</span>
                                            {% endif %}
                                        </td>
                                        <td id="{{entity.id}}_entity_price">{{ entity.price }}</td>

                                        <td id="{{entity.id}}_entity_pricediscounted">{{ entity.priceDiscounted }}</td>

                                        <td id="{{entity.id}}_entity_click">{{ entity.click }}</td>

                                        <td id="{{entity.id}}_entity_inventory">{{ entity.inventory }}</td>

                                        <td id="{{entity.id}}_entity_soldno">{{ entity.soldNo }}</td>

                                        <td id="{{entity.id}}_entity_weight">
                                            {% if entity.widget_weight %}
                                                {{ entity.widget_weight }}
                                            {% else %}
                                                0
                                            {% endif %}
                                        </td>
                                        <td id="{{entity.id}}_status">
                                                
                                        </td>
                                    </tr>
                                    {% endfor %}
                                </tbody>
                        </table>
                        <div class="row">
                            <div class="col-sm-6">
                                <div class="dataTables_info" id="DataTables_Table_0_info">Page 1
                                        of <strong>{{ data.total_page }}</strong>  &nbsp; <i class="glyphicon glyphicon-transfer"></i>  &nbsp;  Total: <strong>{{ data.total_no }}</strong> entries 
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="dataTables_paginate paging_full_numbers select-page-number" id="DataTables_Table_0_paginate">
                                {% if data.total_page > 1 %}
                                    <a tabindex="0" class="first paginate_button paginate_button_disabled"
                                           id="DataTables_Table_0_first"
                                           href="{{ path('admin_product_manage_by_excel',{sort:app.request.get('sort'), item_no:app.request.get('item_no'),page:1,keys:app.request.get('keys')}) }}">首页</a>
                                    <a tabindex="0" class="previous paginate_button paginate_button_disabled"
                                           id="DataTables_Table_0_previous"
                                           href="{{ path('admin_product_manage_by_excel',{sort:app.request.get('sort'), item_no:app.request.get('item_no'),page:(app.request.get('page')) ? app.request.get('page')-1 : 2,keys:app.request.get('keys')}) }}">上一页</a>
                                    <span>
                                      {% for i in 1..data.total_page %}
                                          <a tabindex="0" href="{{ path('admin_product_manage_by_excel', {
                                              keys : app.request.get('keys'),
                                              page : i,
                                              sort : app.request.get('sort'),
                                              item_no: app.request.get('item_no')
                                          }) }}" {% if not app.request.get('page') and i == 1 %} class="paginate_active paginate_button" {% elseif i == app.request.get('page') %} class="paginate_active paginate_button" {% else %} class="paginate_button" {% endif %}> {{ i }}</a>
                                      {% endfor %}
                                    </span>
                                    <a tabindex="0" class="next paginate_button" id="DataTables_Table_0_next"
                                           href="{{ path('admin_product_manage_by_excel',{sort:app.request.get('sort'), item_no:app.request.get('item_no'),page:(app.request.get('page')) ? app.request.get('page')+1 : 2,keys:app.request.get('keys')}) }}">下一页</a>
                                    <a tabindex="0" class="last paginate_button" id="DataTables_Table_0_last"
                                           href="{{ path('admin_product_manage_by_excel',{sort:app.request.get('sort'), item_no:app.request.get('item_no'),page:data.total_page,keys:app.request.get('keys')}) }}">末页</a>
                                {% else %}
                                    <a tabindex="0" class="last paginate_button" id="DataTables_Table_0_last" disabled><strong>1</strong></a>
                                </div>
                                {% endif %}
                            </div>
                        </div>
                    </div>
                </div>
            </section>
        <a href="#" class="hide nav-off-screen-block" data-toggle="class:nav-off-screen" data-target="#nav"></a>
        </section>
    </section>
</section>
{% endblock %}

{% block javascripts %}
<script src="{{ asset('/js/datatables/jquery.dataTables.min.js') }}"></script>
<script src="{{ asset('/js/datatables/jquery.csv-0.71.min.js') }}"></script>
<script src="{{ asset('/js/pagination.js') }}"></script>
<!-- The jQuery UI widget factory, can be omitted if jQuery UI is already included -->
<script src="/js/jQuery-File-Upload/js/vendor/jquery.ui.widget.js"></script>
<!-- The Load Image plugin is included for the preview images and image resizing functionality -->
<script src="/js/jQuery-File-Upload/js/load-image.all.min.js"></script>
<!-- The Canvas to Blob plugin is included for image resizing functionality -->
<script src="/js/jQuery-File-Upload/js/canvas-to-blob.min.js"></script>
<!-- Bootstrap JS is not required, but included for the responsive demo navigation -->
<script src="/js/bootstrap.min.js"></script>
<!-- The Iframe Transport is required for browsers without support for XHR file uploads -->
<script src="/js/jQuery-File-Upload/js/jquery.iframe-transport.js"></script>
<!-- The basic File Upload plugin -->
<script src="/js/jQuery-File-Upload/js/jquery.fileupload.js"></script>
<!-- The File Upload processing plugin -->
<script src="/js/jQuery-File-Upload/js/jquery.fileupload-process.js"></script>
<!-- The File Upload image preview & resize plugin -->
<script src="/js/jQuery-File-Upload/js/jquery.fileupload-image.js"></script>
<!-- The File Upload audio preview plugin -->
<script src="/js/jQuery-File-Upload/js/jquery.fileupload-audio.js"></script>
<!-- The File Upload video preview plugin -->
<script src="/js/jQuery-File-Upload/js/jquery.fileupload-video.js"></script>
<!-- The File Upload validation plugin -->
<script src="/js/jQuery-File-Upload/js/jquery.fileupload-validate.js"></script>

<script src="/js/js-xlsx/shim.js"></script>
<script src="/js/js-xlsx/jszip.js"></script>
<script src="/js/js-xlsx/xlsx.js"></script>
<!-- uncomment the next line here and in xlsxworker.js for ODS support -->
<script src="/js/js-xlsx/dist/ods.js"></script>

<script>
/*jslint unparam: true, regexp: true */
/*global window, $ */
var isAlreadyAdded = false;
$(function () {
    'use strict';
    // Change this to the location of your server-side upload handler:
    var url = window.location.hostname === '/' ?
                '//' : '/upload_excels/index.php',
        uploadButton = $('<button/>')
            .addClass('btn btn-primary')
            .prop('disabled', true)
            .text('Processing...')
            .on('click', function () {
                var $this = $(this),
                    data = $this.data();
                $this
                    .off('click')
                    .text('Abort')
                    .on('click', function () {
                        $this.remove();
                        data.abort();
                    });
                data.submit().always(function () {
                    $this.remove();
                });
            });
    $('#fileupload').fileupload({
        url: url,
        dataType: 'json',
        autoUpload: false,
        acceptFileTypes: /(\.|\/)(xls|xlsx)$/i,
        maxFileSize: 999000,
        // Enable image resizing, except for Android and Opera,
        // which actually support image resizing, but fail to
        // send Blob objects via XHR requests:
        disableImageResize: /Android(?!.*Chrome)|Opera/
            .test(window.navigator.userAgent),
        previewMaxWidth: 100,
        previewMaxHeight: 100,
        previewCrop: true
    }).on('fileuploadadd', function (e, data) {
        if(!isAlreadyAdded){
            data.context = $('<div/>').appendTo('#files');
            $.each(data.files, function (index, file) {
                var node = $('<p/>')
                        .append($('<span/>').text(file.name));
                if (!index) {
                    node
                        .append('<br>')
                        .append(uploadButton.clone(true).data(data));
                }
                node.appendTo(data.context);
            });
        } else {
            location.reload();
        }
  
        isAlreadyAdded = true;
    }).on('fileuploadprocessalways', function (e, data) {
        var index = data.index,
            file = data.files[index],
            node = $(data.context.children()[index]);
        if (file.preview) {
            node
                .prepend('<br>')
                .prepend(file.preview);
        }
        if (file.error) {
            node
                .append('<br>')
                .append($('<span class="text-danger"/>').text(file.error));
        }
        if (index + 1 === data.files.length) {
            data.context.find('button')
                .text('Submit Changes to Server ?')
                .prop('disabled', !!data.files.error);
        }
    }).on('fileuploadprogressall', function (e, data) {
        var progress = parseInt(data.loaded / data.total * 100, 10);
        $('#progress .progress-bar').css(
            'width',
            progress + '%'
        );
    }).on('fileuploaddone', function (e, data) {
        $.each(data.result.files, function (index, file) {
            if (file.url) {
                var link = $('<a>')
                    .attr('target', '_blank')
                    .prop('href', file.url);
                $(data.context.children()[index])
                    .wrap(link);
            } else if (file.error) {
                var error = $('<span class="text-danger"/>').text(file.error);
                $(data.context.children()[index])
                    .append('<br>')
                    .append(error);
            }
        });
    }).on('fileuploadfail', function (e, data) {
        $.each(data.files, function (index) {
            var error = $('<span class="text-danger"/>').text('File upload failed.');
            $(data.context.children()[index])
                .append('<br>')
                .append(error);
        });
    }).prop('disabled', !$.support.fileInput)
        .parent().addClass($.support.fileInput ? undefined : 'disabled');
});

var X = XLSX;
var XW = {
    /* worker message */
    msg: 'xlsx',
    /* worker scripts */
    rABS: '/js/js-xlsx//xlsxworker2.js',
    norABS: '/js/js-xlsx//xlsxworker1.js',
    noxfer: '/js/js-xlsx//xlsxworker.js'
};

var rABS = typeof FileReader !== "undefined" && typeof FileReader.prototype !== "undefined" && typeof FileReader.prototype.readAsBinaryString !== "undefined";
if(!rABS) {
    document.getElementsByName("userabs")[0].disabled = true;
    document.getElementsByName("userabs")[0].checked = false;
}

var use_worker = typeof Worker !== 'undefined';
if(!use_worker) {
    document.getElementsByName("useworker")[0].disabled = true;
    document.getElementsByName("useworker")[0].checked = false;
}

var transferable = use_worker;
if(!transferable) {
    document.getElementsByName("xferable")[0].disabled = true;
    document.getElementsByName("xferable")[0].checked = false;
}

var wtf_mode = false;

function fixdata(data) {
    var o = "", l = 0, w = 10240;
    for(; l<data.byteLength/w; ++l) o+=String.fromCharCode.apply(null,new Uint8Array(data.slice(l*w,l*w+w)));
    o+=String.fromCharCode.apply(null, new Uint8Array(data.slice(l*w)));
    return o;
}

function ab2str(data) {
    var o = "", l = 0, w = 10240;
    for(; l<data.byteLength/w; ++l) o+=String.fromCharCode.apply(null,new Uint16Array(data.slice(l*w,l*w+w)));
    o+=String.fromCharCode.apply(null, new Uint16Array(data.slice(l*w)));
    return o;
}

function s2ab(s) {
    var b = new ArrayBuffer(s.length*2), v = new Uint16Array(b);
    for (var i=0; i != s.length; ++i) v[i] = s.charCodeAt(i);
    return [v, b];
}

function xw_noxfer(data, cb) {
    var worker = new Worker(XW.noxfer);
    worker.onmessage = function(e) {
        switch(e.data.t) {
            case 'ready': break;
            case 'e': console.error(e.data.d); break;
            case XW.msg: cb(JSON.parse(e.data.d)); break;
        }
    };
    var arr = rABS ? data : btoa(fixdata(data));
    worker.postMessage({d:arr,b:rABS});
}

function xw_xfer(data, cb) {
    var worker = new Worker(rABS ? XW.rABS : XW.norABS);
    worker.onmessage = function(e) {
        switch(e.data.t) {
            case 'ready': break;
            case 'e': console.error(e.data.d); break;
            default: xx=ab2str(e.data).replace(/\n/g,"\\n").replace(/\r/g,"\\r"); console.log("done"); cb(JSON.parse(xx)); break;
        }
    };
    if(rABS) {
        var val = s2ab(data);
        worker.postMessage(val[1], [val[1]]);
    } else {
        worker.postMessage(data, [data]);
    }
}

function xw(data, cb) {
    transferable = true;
    if(transferable) xw_xfer(data, cb);
    else xw_noxfer(data, cb);
}

function to_json(workbook) {
    var result = {};
    workbook.SheetNames.forEach(function(sheetName) {
        var roa = X.utils.sheet_to_row_object_array(workbook.Sheets[sheetName]);
        if(roa.length > 0){
            result[sheetName] = roa;
        }
    });
    return result;
}

function to_csv(workbook) {
    var result = [];
    workbook.SheetNames.forEach(function(sheetName) {
        var csv = X.utils.sheet_to_csv(workbook.Sheets[sheetName]);
        if(csv.length > 0){
            result.push("SHEET: " + sheetName);
            result.push("");
            result.push(csv);
        }
    });
    return result.join("\n");
}

function to_formulae(workbook) {
    var result = [];
    workbook.SheetNames.forEach(function(sheetName) {
        var formulae = X.utils.get_formulae(workbook.Sheets[sheetName]);
        if(formulae.length > 0){
            result.push("SHEET: " + sheetName);
            result.push("");
            result.push(formulae.join("\n"));
        }
    });
    return result.join("\n");
}

var tarea = document.getElementById('b64data');
function b64it() {
    if(typeof console !== 'undefined') console.log("onload", new Date());
    var wb = X.read(tarea.value, {type: 'base64',WTF:wtf_mode});
    process_wb(wb);
}

function GetElementInsideContainer(containerID, childID) {
    var elm = document.getElementById(childID);
    var parent = elm ? elm.parentNode : {};
    return (parent.id && parent.id === containerID) ? elm : {};
}

function process_wb(wb) {
    var output = JSON.stringify(to_json(wb), 2, 2);
    var json_obj = JSON.parse(output);
    var analysis_progress_num = 0;
    var loop_num = json_obj.Sheet1.length;

    (function theLoop (i) {
        setTimeout(function () {
            var all_green = 1;
            var currentID = json_obj.Sheet1[i].ID;
            GetElementInsideContainer(currentID,  currentID + '_entity_id').style.backgroundColor = "#95B56F";
            GetElementInsideContainer(currentID,  currentID + '_entity_name').style.backgroundColor = "#95B56F";

            var currentPrice = GetElementInsideContainer(currentID,  currentID + '_entity_price');
            if(json_obj.Sheet1[i].原价 == currentPrice.textContent){
                currentPrice.style.backgroundColor = "#95B56F";
            } else {
                currentPrice.style.backgroundColor = "pink";
                currentPrice.innerHTML = json_obj.Sheet1[i].原价 + " <strike>(" + currentPrice.textContent +")</strike>";
                all_green = 0;
            }

            var currentPriceDiscounted = GetElementInsideContainer(currentID,  currentID + '_entity_pricediscounted');
            if(json_obj.Sheet1[i].折后价格 == currentPriceDiscounted.textContent){
                currentPriceDiscounted.style.backgroundColor = "#95B56F";
            } else {
                currentPriceDiscounted.style.backgroundColor = "pink";
                currentPriceDiscounted.innerHTML = json_obj.Sheet1[i].折后价格 + " <strike>(" + currentPriceDiscounted.textContent +")</strike>";
                all_green = 0;
            }

            var currentClick = GetElementInsideContainer(currentID,  currentID + '_entity_click');
            if(json_obj.Sheet1[i].浏览次数.trim() == currentClick.textContent.trim()){
                currentClick.style.backgroundColor = "#95B56F";
            } else {
                currentClick.style.backgroundColor = "pink";
                currentClick.innerHTML = json_obj.Sheet1[i].浏览次数 + " <strike>(" + currentClick.textContent +")</strike>";
                all_green = 0;
            }

            var currentInventory = GetElementInsideContainer(currentID,  currentID + '_entity_inventory');
            if(json_obj.Sheet1[i].库存.trim() == currentInventory.textContent.trim()){
                currentInventory.style.backgroundColor = "#95B56F";
            } else {
                currentInventory.style.backgroundColor = "pink";
                currentInventory.innerHTML = json_obj.Sheet1[i].库存 + " <strike>(" + currentInventory.textContent +")</strike>";
                all_green = 0;
            }                
            var currentSoldNo = GetElementInsideContainer(currentID,  currentID + '_entity_soldno');
            if(json_obj.Sheet1[i].销售.trim() == currentSoldNo.textContent.trim()){
                currentSoldNo.style.backgroundColor = "#95B56F";
            } else {
                currentSoldNo.style.backgroundColor = "pink";
                currentSoldNo.innerHTML = json_obj.Sheet1[i].销售 + " <strike>(" + currentSoldNo.textContent +")</strike>";
                all_green = 0;
            }
            var currentWeight = GetElementInsideContainer(currentID,  currentID + '_entity_weight');
            if(json_obj.Sheet1[i].权重.trim() == currentWeight.textContent.trim()){
                currentWeight.style.backgroundColor = "#95B56F";
            } else {
                currentWeight.innerHTML = json_obj.Sheet1[i].权重 + " <strike>(" + currentWeight.textContent +")</strike>";
                all_green = 0;
                currentWeight.style.backgroundColor = "pink";
            }

            var status = GetElementInsideContainer(currentID,  currentID + '_status');
            if(all_green == 1){
                status.innerHTML = "<span class=\"glyphicon glyphicon-check\"></span>";
                status.style.backgroundColor = "lime";
            } else {
                status.innerHTML = "<span class=\"glyphicon glyphicon-alert\"></span>";
                status.style.backgroundColor = "orangered";
            }

            analysis_progress_num = parseInt( i / loop_num * 100, 10);
            $('#analysis_progress .progress-bar').css(
                'width',
                analysis_progress_num + '%'
            );

            if (++i < loop_num) {          // If i > 0, keep going
              theLoop(i);       // Call the loop again, and pass it the current value of i
            } else {
                analysis_progress_num = parseInt(100, 10);
                $('#analysis_progress .progress-bar').css(
                    'width',
                    analysis_progress_num + '%'
                );
            }
        }, 50);
    })(0);


    /* Following part is the output generation section. */
    //if(out.innerText === undefined) out.textContent = output;
    //else out.innerText = output;
    //if(typeof console !== 'undefined') console.log("output", new Date());
}

var drop = document;
function handleDrop(e) {
    e.stopPropagation();
    e.preventDefault();
    rABS = true;
    use_worker = true;
    var files = e.dataTransfer.files;
    var f = files[0];
    {
        var reader = new FileReader();
        var name = f.name;
        reader.onload = function(e) {
            if(typeof console !== 'undefined') console.log("onload", new Date(), rABS, use_worker);
            var data = e.target.result;
            if(use_worker) {
                xw(data, process_wb);
            } else {
                var wb;
                if(rABS) {
                    wb = X.read(data, {type: 'binary'});
                } else {
                var arr = fixdata(data);
                    wb = X.read(btoa(arr), {type: 'base64'});
                }
                process_wb(wb);
            }
        };
        if(rABS) 
            reader.readAsBinaryString(f);
        else 
            reader.readAsArrayBuffer(f);
    }
}

function handleDragover(e) {
    e.stopPropagation();
    e.preventDefault();
    e.dataTransfer.dropEffect = 'copy';
}

if(drop.addEventListener) {
    drop.addEventListener('dragenter', handleDragover, false);
    drop.addEventListener('dragover', handleDragover, false);
    drop.addEventListener('drop', handleDrop, false);
}


var xlf = document.getElementById('fileupload');
function handleFile(e) {
    rABS = true;
    use_worker = true;
    var files = e.target.files;
    var f = files[0];
    {
        var reader = new FileReader();
        var name = f.name;
        reader.onload = function(e) {
            if(typeof console !== 'undefined') console.log("onload", new Date(), rABS, use_worker);
            var data = e.target.result;
            if(use_worker) {
                xw(data, process_wb);
            } else {
                var wb;
                if(rABS) {
                    wb = X.read(data, {type: 'binary'});
                } else {
                var arr = fixdata(data);
                    wb = X.read(btoa(arr), {type: 'base64'});
                }
                process_wb(wb);
            }
        };
        if(rABS) reader.readAsBinaryString(f);
        else reader.readAsArrayBuffer(f);
    }
}
if(xlf.addEventListener) xlf.addEventListener('change', handleFile, false);
</script>
{% endblock %}
